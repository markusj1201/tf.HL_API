# 1) Download a dataset
(train_images, train_labels), (test_images, test_labels)
  = tf.keras.datasets.mnist.load_data()
  
  # 1a) Reformat the images / labels (not shown, see Github)
  
  # 2) Build yor model
  model= tf.keras.Sequential()
  model.add(tf.keras.layers.Dense(256, activation=tf.nm.relu, input_shape=(784,)))
  model.add(tf.keras.layers.Dense(10, activation-tf.nm.softmax))
  model.compile(loss='categorical_crossentropy',optimizer='rmsprop')
  
  # Use the model
  model.fit(train_images, train_labels, epochs=5) 
  
  # 3) train
  loss, accuracy = model.evaluate(test_images, test_labels) 
  print(' Accuracy', test_accuracy)
  # Will be some number around 99%
  
  # 4) evaluate
  model.predict(test_images[0:1]) 
  
  # 5) predict
  scores = model.predict(test_images[0:1])
  print(np.argmax(scores)) #5
  
  
  
